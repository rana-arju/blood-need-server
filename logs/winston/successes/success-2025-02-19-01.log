{"clientVersion":"6.3.1","code":"P2002","level":"error","message":"üê±‚Äçüèç globalErrorHandler ~~ \nInvalid `prisma.bloodDonor.create()` invocation in\nD:\\blood-need\\blood-need-server\\src\\app\\modules\\bloodDonor\\bloodDonor.service.ts:72:42\n\n  69 const createBloodDonor = async (\n  70   bloodDonorData: IBloodDonor\n  71 ): Promise<BloodDonor> => {\n‚Üí 72   const result = await prisma.bloodDonor.create(\nUnique constraint failed on the constraint: `BloodDonor_userId_key`","meta":{"modelName":"BloodDonor","target":"BloodDonor_userId_key"},"name":"PrismaClientKnownRequestError","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.bloodDonor.create()` invocation in\nD:\\blood-need\\blood-need-server\\src\\app\\modules\\bloodDonor\\bloodDonor.service.ts:72:42\n\n  69 const createBloodDonor = async (\n  70   bloodDonorData: IBloodDonor\n  71 ): Promise<BloodDonor> => {\n‚Üí 72   const result = await prisma.bloodDonor.create(\nUnique constraint failed on the constraint: `BloodDonor_userId_key`\n    at Bn.handleRequestError (D:\\blood-need\\blood-need-server\\node_modules\\@prisma\\client\\runtime\\library.js:121:7362)\n    at Bn.handleAndLogRequestError (D:\\blood-need\\blood-need-server\\node_modules\\@prisma\\client\\runtime\\library.js:121:6686)\n    at Bn.request (D:\\blood-need\\blood-need-server\\node_modules\\@prisma\\client\\runtime\\library.js:121:6393)\n    at l (D:\\blood-need\\blood-need-server\\node_modules\\@prisma\\client\\runtime\\library.js:130:9645)","timestamp":"2025-02-18T19:09:58.161Z"}
{"level":"info","message":"Server running on port 5000","timestamp":"2025-02-18T19:13:33.762Z"}
{"level":"info","message":"Server running on port 5000","timestamp":"2025-02-18T19:13:35.658Z"}
{"level":"info","message":"Server running on port 5000","timestamp":"2025-02-18T19:13:38.802Z"}
{"level":"info","message":"Server running on port 5000","timestamp":"2025-02-18T19:13:40.321Z"}
{"level":"info","message":"Server running on port 5000","timestamp":"2025-02-18T19:13:50.353Z"}
{"level":"info","message":"Server running on port 5000","timestamp":"2025-02-18T19:13:52.773Z"}
{"level":"info","message":"Server running on port 5000","timestamp":"2025-02-18T19:13:55.661Z"}
{"level":"info","message":"Server running on port 5000","timestamp":"2025-02-18T19:14:08.201Z"}
{"level":"info","message":"Server running on port 5000","timestamp":"2025-02-18T19:14:31.592Z"}
{"level":"info","message":"Server running on port 5000","timestamp":"2025-02-18T19:14:47.747Z"}
{"level":"info","message":"Server running on port 5000","timestamp":"2025-02-18T19:14:55.164Z"}
{"level":"info","message":"Server running on port 5000","timestamp":"2025-02-18T19:15:00.161Z"}
{"level":"info","message":"Server running on port 5000","timestamp":"2025-02-18T19:15:12.645Z"}
{"level":"error","message":"üê±‚Äçüèç globalErrorHandler ~~ You already register!","stack":"Error: You already register!\n    at D:\\blood-need\\blood-need-server\\src\\app\\modules\\bloodDonor\\bloodDonor.service.ts:77:11\n    at Generator.next (<anonymous>)\n    at fulfilled (D:\\blood-need\\blood-need-server\\src\\app\\modules\\bloodDonor\\bloodDonor.service.ts:5:58)","statusCode":400,"timestamp":"2025-02-18T19:15:44.618Z"}
{"level":"info","message":"Server running on port 5000","timestamp":"2025-02-18T19:21:04.874Z"}
