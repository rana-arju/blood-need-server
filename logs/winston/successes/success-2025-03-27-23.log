{"level":"error","message":"Unhandled Rejection at:","metadata":{"promise":"[object Promise]","reason":"\nInvalid `prisma.user.findUnique()` invocation in\nD:\\Future project\\blood-need\\blood-need-server\\src\\app\\middlewares\\auth.ts:28:36\n\n  25 }\n  26 \n  27 // Fetch user from MongoDB using Prisma based on the userId passed in the token\n→ 28 const user = await prisma.user.findUnique(\nInconsistent column data: Malformed ObjectID: invalid character 'n' was found at index 0 in the provided hex string: \"null\"."},"timestamp":"2025-03-27 23:05:01:51"}
{"level":"error","message":"Unhandled Rejection at:","metadata":{"promise":"[object Promise]","reason":"\nInvalid `prisma.user.findUnique()` invocation in\nD:\\Future project\\blood-need\\blood-need-server\\src\\app\\middlewares\\auth.ts:28:36\n\n  25 }\n  26 \n  27 // Fetch user from MongoDB using Prisma based on the userId passed in the token\n→ 28 const user = await prisma.user.findUnique(\nInconsistent column data: Malformed ObjectID: invalid character 'n' was found at index 0 in the provided hex string: \"null\"."},"timestamp":"2025-03-27 23:06:24:624"}
{"level":"error","message":"Unhandled Rejection at:","metadata":{"promise":"[object Promise]","reason":"\nInvalid `prisma.user.findUnique()` invocation in\nD:\\Future project\\blood-need\\blood-need-server\\src\\app\\middlewares\\auth.ts:28:36\n\n  25 }\n  26 \n  27 // Fetch user from MongoDB using Prisma based on the userId passed in the token\n→ 28 const user = await prisma.user.findUnique(\nInconsistent column data: Malformed ObjectID: invalid character 'n' was found at index 0 in the provided hex string: \"null\"."},"timestamp":"2025-03-27 23:10:46:1046"}
{"level":"info","message":"Donation reminder job scheduled","metadata":{},"timestamp":"2025-03-27 23:17:44:1744"}
{"level":"info","message":"Database connection initialized","metadata":{},"timestamp":"2025-03-27 23:17:44:1744"}
{"level":"info","message":"Server is running on port 5000","metadata":{},"timestamp":"2025-03-27 23:17:44:1744"}
{"level":"info","message":"Successfully connected to database","metadata":{},"timestamp":"2025-03-27 23:17:44:1744"}
{"level":"error","message":"Unhandled Rejection at:","metadata":{"promise":"[object Promise]","reason":"\nInvalid `prisma.user.findUnique()` invocation in\nD:\\Future project\\blood-need\\blood-need-server\\src\\app\\middlewares\\auth.ts:28:36\n\n  25 }\n  26 \n  27 // Fetch user from MongoDB using Prisma based on the userId passed in the token\n→ 28 const user = await prisma.user.findUnique(\nInconsistent column data: Malformed ObjectID: invalid character 'n' was found at index 0 in the provided hex string: \"null\"."},"timestamp":"2025-03-27 23:17:50:1750"}
{"level":"error","message":"Unhandled Rejection at:","metadata":{"promise":"[object Promise]","reason":"\nInvalid `prisma.user.findUnique()` invocation in\nD:\\Future project\\blood-need\\blood-need-server\\src\\app\\middlewares\\auth.ts:28:36\n\n  25 }\n  26 \n  27 // Fetch user from MongoDB using Prisma based on the userId passed in the token\n→ 28 const user = await prisma.user.findUnique(\nInconsistent column data: Malformed ObjectID: invalid character 'n' was found at index 0 in the provided hex string: \"null\"."},"timestamp":"2025-03-27 23:19:04:194"}
{"level":"info","message":"Donation reminder job scheduled","metadata":{},"timestamp":"2025-03-27 23:20:29:2029"}
{"level":"info","message":"Database connection initialized","metadata":{},"timestamp":"2025-03-27 23:20:29:2029"}
{"level":"info","message":"Server is running on port 5000","metadata":{},"timestamp":"2025-03-27 23:20:29:2029"}
{"level":"info","message":"Successfully connected to database","metadata":{},"timestamp":"2025-03-27 23:20:29:2029"}
{"level":"info","message":"Donation reminder job scheduled","metadata":{},"timestamp":"2025-03-27 23:20:35:2035"}
{"level":"info","message":"Database connection initialized","metadata":{},"timestamp":"2025-03-27 23:20:35:2035"}
{"level":"info","message":"Server is running on port 5000","metadata":{},"timestamp":"2025-03-27 23:20:35:2035"}
{"level":"info","message":"Successfully connected to database","metadata":{},"timestamp":"2025-03-27 23:20:35:2035"}
{"level":"error","message":"Unhandled Rejection at:","metadata":{"promise":"[object Promise]","reason":"\nInvalid `prisma.user.findUnique()` invocation in\nD:\\Future project\\blood-need\\blood-need-server\\src\\app\\middlewares\\auth.ts:28:36\n\n  25 }\n  26 \n  27 // Fetch user from MongoDB using Prisma based on the userId passed in the token\n→ 28 const user = await prisma.user.findUnique(\nInconsistent column data: Malformed ObjectID: invalid character 'n' was found at index 0 in the provided hex string: \"null\"."},"timestamp":"2025-03-27 23:21:20:2120"}
