{"level":"info","message":"Server running on port 5000","timestamp":"2025-02-17T19:35:08.615Z"}
{"issues":[{"code":"invalid_type","expected":"string","message":"Password is required!","path":["body","password"],"received":"undefined"}],"level":"error","message":"üê±‚Äçüèç globalErrorHandler ~~ [\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"body\",\n      \"password\"\n    ],\n    \"message\": \"Password is required!\"\n  }\n]","name":"ZodError","stack":"ZodError: [\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"body\",\n      \"password\"\n    ],\n    \"message\": \"Password is required!\"\n  }\n]\n    at Object.get error [as error] (D:\\blood-need\\blood-need-server\\node_modules\\zod\\lib\\types.js:55:31)\n    at ZodObject.parseAsync (D:\\blood-need\\blood-need-server\\node_modules\\zod\\lib\\types.js:196:22)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-02-17T19:37:05.414Z"}
{"issues":[{"code":"invalid_type","expected":"string","message":"Password is required!","path":["body","password"],"received":"undefined"}],"level":"error","message":"üê±‚Äçüèç globalErrorHandler ~~ [\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"body\",\n      \"password\"\n    ],\n    \"message\": \"Password is required!\"\n  }\n]","name":"ZodError","stack":"ZodError: [\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"body\",\n      \"password\"\n    ],\n    \"message\": \"Password is required!\"\n  }\n]\n    at Object.get error [as error] (D:\\blood-need\\blood-need-server\\node_modules\\zod\\lib\\types.js:55:31)\n    at ZodObject.parseAsync (D:\\blood-need\\blood-need-server\\node_modules\\zod\\lib\\types.js:196:22)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-02-17T19:38:42.204Z"}
{"issues":[{"code":"invalid_type","expected":"string","message":"Password is required!","path":["body","password"],"received":"undefined"}],"level":"error","message":"üê±‚Äçüèç globalErrorHandler ~~ [\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"body\",\n      \"password\"\n    ],\n    \"message\": \"Password is required!\"\n  }\n]","name":"ZodError","stack":"ZodError: [\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"string\",\n    \"received\": \"undefined\",\n    \"path\": [\n      \"body\",\n      \"password\"\n    ],\n    \"message\": \"Password is required!\"\n  }\n]\n    at Object.get error [as error] (D:\\blood-need\\blood-need-server\\node_modules\\zod\\lib\\types.js:55:31)\n    at ZodObject.parseAsync (D:\\blood-need\\blood-need-server\\node_modules\\zod\\lib\\types.js:196:22)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-02-17T19:42:26.601Z"}
{"level":"info","message":"Server running on port 5000","timestamp":"2025-02-17T19:46:45.577Z"}
{"level":"info","message":"Server running on port 5000","timestamp":"2025-02-17T19:46:49.859Z"}
{"level":"info","message":"Server running on port 5000","timestamp":"2025-02-17T19:46:57.337Z"}
{"level":"error","message":"üê±‚Äçüèç globalErrorHandler ~~ User already exist!","stack":"Error: User already exist!\n    at D:\\blood-need\\blood-need-server\\src\\app\\modules\\user\\user.service.ts:75:11\n    at Generator.next (<anonymous>)\n    at fulfilled (D:\\blood-need\\blood-need-server\\src\\app\\modules\\user\\user.service.ts:5:58)","statusCode":401,"timestamp":"2025-02-17T19:52:03.988Z"}
{"level":"error","message":"üê±‚Äçüèç globalErrorHandler ~~ User already exist!","stack":"Error: User already exist!\n    at D:\\blood-need\\blood-need-server\\src\\app\\modules\\user\\user.service.ts:75:11\n    at Generator.next (<anonymous>)\n    at fulfilled (D:\\blood-need\\blood-need-server\\src\\app\\modules\\user\\user.service.ts:5:58)","statusCode":401,"timestamp":"2025-02-17T19:52:41.207Z"}
{"level":"info","message":"Server running on port 5000","timestamp":"2025-02-17T19:53:40.190Z"}
{"level":"info","message":"Server running on port 5000","timestamp":"2025-02-17T19:54:08.005Z"}
{"clientVersion":"6.3.1","level":"error","message":"üê±‚Äçüèç globalErrorHandler ~~ \nInvalid `prisma.user.create()` invocation in\nD:\\blood-need\\blood-need-server\\src\\app\\modules\\user\\user.service.ts:80:36\n\n  77 // üîπ Hash the password before storing it\n  78 const hashedPassword = await bcrypt.hash(password, 10); // 10 = salt rounds\n  79 payload.password = hashedPassword;\n‚Üí 80 const result = await prisma.user.create({\n       data: {\n         name: \"Arju Rana\",\n         email: \"ranaarju2020@gmail.com\",\n         image: \"https://lh3.googleusercontent.com/a/ACg8ocI3ywbPK6Ewh5ivPdwOB_m7mpn0w01qDFxRTO3R9MN3ljmOqHE=s96-c\",\n         provider: \"google\",\n         ~~~~~~~~\n         password: \"$2b$10$G5ejWyqRf9ucLJL2ewPAweSKadwGHurI85bLIUo53r6oXIe6Ql5RS\",\n     ?   id?: String,\n     ?   role?: String,\n     ?   blood?: String | Null,\n     ?   donationCount?: Int,\n     ?   rewardBadge?: String | Null,\n     ?   createdAt?: DateTime,\n     ?   updatedAt?: DateTime,\n     ?   accounts?: AccountCreateNestedManyWithoutUserInput,\n     ?   sessions?: SessionCreateNestedManyWithoutUserInput,\n     ?   donations?: DonationCreateNestedManyWithoutUserInput,\n     ?   donor?: BloodDonorCreateNestedManyWithoutUserInput,\n     ?   request?: BloodRequestCreateNestedManyWithoutUserInput\n       }\n     })\n\nUnknown argument `provider`. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.user.create()` invocation in\nD:\\blood-need\\blood-need-server\\src\\app\\modules\\user\\user.service.ts:80:36\n\n  77 // üîπ Hash the password before storing it\n  78 const hashedPassword = await bcrypt.hash(password, 10); // 10 = salt rounds\n  79 payload.password = hashedPassword;\n‚Üí 80 const result = await prisma.user.create({\n       data: {\n         name: \"Arju Rana\",\n         email: \"ranaarju2020@gmail.com\",\n         image: \"https://lh3.googleusercontent.com/a/ACg8ocI3ywbPK6Ewh5ivPdwOB_m7mpn0w01qDFxRTO3R9MN3ljmOqHE=s96-c\",\n         provider: \"google\",\n         ~~~~~~~~\n         password: \"$2b$10$G5ejWyqRf9ucLJL2ewPAweSKadwGHurI85bLIUo53r6oXIe6Ql5RS\",\n     ?   id?: String,\n     ?   role?: String,\n     ?   blood?: String | Null,\n     ?   donationCount?: Int,\n     ?   rewardBadge?: String | Null,\n     ?   createdAt?: DateTime,\n     ?   updatedAt?: DateTime,\n     ?   accounts?: AccountCreateNestedManyWithoutUserInput,\n     ?   sessions?: SessionCreateNestedManyWithoutUserInput,\n     ?   donations?: DonationCreateNestedManyWithoutUserInput,\n     ?   donor?: BloodDonorCreateNestedManyWithoutUserInput,\n     ?   request?: BloodRequestCreateNestedManyWithoutUserInput\n       }\n     })\n\nUnknown argument `provider`. Available options are marked with ?.\n    at xn (D:\\blood-need\\blood-need-server\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at Bn.handleRequestError (D:\\blood-need\\blood-need-server\\node_modules\\@prisma\\client\\runtime\\library.js:121:7005)\n    at Bn.handleAndLogRequestError (D:\\blood-need\\blood-need-server\\node_modules\\@prisma\\client\\runtime\\library.js:121:6686)\n    at Bn.request (D:\\blood-need\\blood-need-server\\node_modules\\@prisma\\client\\runtime\\library.js:121:6393)\n    at l (D:\\blood-need\\blood-need-server\\node_modules\\@prisma\\client\\runtime\\library.js:130:9645)","timestamp":"2025-02-17T19:56:28.297Z"}
{"level":"info","message":"Server running on port 5000","timestamp":"2025-02-17T19:58:07.918Z"}
{"level":"info","message":"Server running on port 5000","timestamp":"2025-02-17T19:58:10.054Z"}
{"level":"info","message":"Server running on port 5000","timestamp":"2025-02-17T19:58:14.701Z"}
{"clientVersion":"6.3.1","level":"error","message":"üê±‚Äçüèç globalErrorHandler ~~ \nInvalid `prisma.user.create()` invocation in\nD:\\blood-need\\blood-need-server\\src\\app\\modules\\user\\user.service.ts:80:36\n\n  77 // üîπ Hash the password before storing it\n  78 const hashedPassword = await bcrypt.hash(password, 10); // 10 = salt rounds\n  79 payload.password = hashedPassword;\n‚Üí 80 const result = await prisma.user.create({\n       data: {\n         name: \"Arju Rana\",\n         email: \"ranaarju2020@gmail.com\",\n         image: \"https://lh3.googleusercontent.com/a/ACg8ocI3ywbPK6Ewh5ivPdwOB_m7mpn0w01qDFxRTO3R9MN3ljmOqHE=s96-c\",\n         provider: \"google\",\n         ~~~~~~~~\n         providerId: \"114474368801056050942\",\n         password: \"$2b$10$xwk8GYlb3KjmMxSXdyb/EuoWlXn30sN5z8ZcHqGvpI5h4pDqdeDLa\",\n     ?   id?: String,\n     ?   role?: String,\n     ?   blood?: String | Null,\n     ?   donationCount?: Int,\n     ?   rewardBadge?: String | Null,\n     ?   createdAt?: DateTime,\n     ?   updatedAt?: DateTime,\n     ?   accounts?: AccountCreateNestedManyWithoutUserInput,\n     ?   sessions?: SessionCreateNestedManyWithoutUserInput,\n     ?   donations?: DonationCreateNestedManyWithoutUserInput,\n     ?   donor?: BloodDonorCreateNestedManyWithoutUserInput,\n     ?   request?: BloodRequestCreateNestedManyWithoutUserInput\n       }\n     })\n\nUnknown argument `provider`. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.user.create()` invocation in\nD:\\blood-need\\blood-need-server\\src\\app\\modules\\user\\user.service.ts:80:36\n\n  77 // üîπ Hash the password before storing it\n  78 const hashedPassword = await bcrypt.hash(password, 10); // 10 = salt rounds\n  79 payload.password = hashedPassword;\n‚Üí 80 const result = await prisma.user.create({\n       data: {\n         name: \"Arju Rana\",\n         email: \"ranaarju2020@gmail.com\",\n         image: \"https://lh3.googleusercontent.com/a/ACg8ocI3ywbPK6Ewh5ivPdwOB_m7mpn0w01qDFxRTO3R9MN3ljmOqHE=s96-c\",\n         provider: \"google\",\n         ~~~~~~~~\n         providerId: \"114474368801056050942\",\n         password: \"$2b$10$xwk8GYlb3KjmMxSXdyb/EuoWlXn30sN5z8ZcHqGvpI5h4pDqdeDLa\",\n     ?   id?: String,\n     ?   role?: String,\n     ?   blood?: String | Null,\n     ?   donationCount?: Int,\n     ?   rewardBadge?: String | Null,\n     ?   createdAt?: DateTime,\n     ?   updatedAt?: DateTime,\n     ?   accounts?: AccountCreateNestedManyWithoutUserInput,\n     ?   sessions?: SessionCreateNestedManyWithoutUserInput,\n     ?   donations?: DonationCreateNestedManyWithoutUserInput,\n     ?   donor?: BloodDonorCreateNestedManyWithoutUserInput,\n     ?   request?: BloodRequestCreateNestedManyWithoutUserInput\n       }\n     })\n\nUnknown argument `provider`. Available options are marked with ?.\n    at xn (D:\\blood-need\\blood-need-server\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at Bn.handleRequestError (D:\\blood-need\\blood-need-server\\node_modules\\@prisma\\client\\runtime\\library.js:121:7005)\n    at Bn.handleAndLogRequestError (D:\\blood-need\\blood-need-server\\node_modules\\@prisma\\client\\runtime\\library.js:121:6686)\n    at Bn.request (D:\\blood-need\\blood-need-server\\node_modules\\@prisma\\client\\runtime\\library.js:121:6393)\n    at l (D:\\blood-need\\blood-need-server\\node_modules\\@prisma\\client\\runtime\\library.js:130:9645)","timestamp":"2025-02-17T19:58:30.291Z"}
